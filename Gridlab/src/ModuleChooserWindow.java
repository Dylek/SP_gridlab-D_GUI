/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class ModuleChooserWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public ModuleChooserWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        powerflowModule = new javax.swing.JCheckBox();
        generatorsModule = new javax.swing.JCheckBox();
        tapeModule = new javax.swing.JCheckBox();
        climateModule = new javax.swing.JCheckBox();
        assertModule = new javax.swing.JCheckBox();
        residentialModule = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        powerflowModule.setText("powerflow");
        powerflowModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerflowModuleActionPerformed(evt);
            }
        });

        generatorsModule.setText("generators");
        generatorsModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatorsModuleActionPerformed(evt);
            }
        });

        tapeModule.setText("tape");

        climateModule.setText("climate");

        assertModule.setText("assert");
        assertModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assertModuleActionPerformed(evt);
            }
        });

        residentialModule.setText("residential");

        jLabel1.setText("Choose modules:");

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tapeModule)
                            .addComponent(generatorsModule)
                            .addComponent(powerflowModule)
                            .addComponent(assertModule)
                            .addComponent(climateModule))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(residentialModule)
                        .addGap(69, 98, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OKButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(powerflowModule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generatorsModule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tapeModule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(climateModule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assertModule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(residentialModule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(OKButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void powerflowModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerflowModuleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_powerflowModuleActionPerformed

    private void generatorsModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatorsModuleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generatorsModuleActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        String s = "";
        if(powerflowModule.isSelected()){
            s += "module powerflow;\n";
        }
        if(generatorsModule.isSelected()){
            s += "module generators;\n";
        }
        if(tapeModule.isSelected()){
            s += "module tape;\n";
        }
        if(climateModule.isSelected()){
            s += "module climate;\n";
        }
        if(assertModule.isSelected()){
            s += "module assert;\n";
        }
        if(residentialModule.isSelected()){
            s += "module residential;\n";
        }
        
        System.out.print(s); //zamiast printować będzie zwracać string do wrzucenia do pliku
        
        dispose();
        ClockChooserWindow cc = new ClockChooserWindow();
        cc.setVisible(true);
    }//GEN-LAST:event_OKButtonActionPerformed

    private void assertModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assertModuleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assertModuleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModuleChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModuleChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModuleChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModuleChooserWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModuleChooserWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JCheckBox assertModule;
    private javax.swing.JCheckBox climateModule;
    private javax.swing.JCheckBox generatorsModule;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox powerflowModule;
    private javax.swing.JCheckBox residentialModule;
    private javax.swing.JCheckBox tapeModule;
    // End of variables declaration//GEN-END:variables
}
